--------------------------------------------------------------------------------------------
118. Pascal's Triangle
            Given an integer numRows, return the first numRows of Pascal's triangle.
            In Pascal's triangle, each number is the sum of the two numbers directly above it as shown:
--------------------------------------------------------------------------------------------
Example 1:

Input: numRows = 5
Output: [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]
--------------------------------------------------------------------------------------------
Example 2:

Input: numRows = 1
Output: [[1]]
--------------------------------------------------------------------------------------------
class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {
        
        int n = matrix.size();
        int m = matrix[0].size();
        
        vector<int> x , y;
        
        // Identify all rows and columns that need to be set to zero
        for(int i = 0; i < n; i++) {
            for(int j = 0; j < m; j++) {
                if(matrix[i][j] == 0) {
                    x.push_back(i);
                    y.push_back(j);
                }
            }
        }
        
        // Set the identified rows to zero
        for(int i = 0; i < x.size(); i++) {
            int index = x[i];
            for(int j = 0; j < m; j++) {
               matrix[index][j] = 0;
            }
        }
        
        // Set the identified columns to zero
        for(int i = 0; i < y.size(); i++) {
            int index = y[i];
            for(int j = 0; j < n; j++) { 
               matrix[j][index] = 0;
            }
        }
    }
};
--------------------------------------------------------------------------------------------
Approach - > 
Analyze the problem: We need to identify all the rows and columns in the matrix that contain a zero. Once identified, we will set the entire row and column to zero.

Find the size of rows and columns: We calculate the number of rows n and columns m from the matrix dimensions. This will help in iterating through the matrix.

Create two arrays to store indices:

One array x to store the row indices where a zero is found.
Another array y to store the column indices where a zero is found.
Store the indices: Iterate over the matrix to identify positions where zeros are present, and push the corresponding row and column indices into arrays x and y.

Set the identified rows to zero: Use the indices in the x array to set the corresponding rows to zero.

Set the identified columns to zero: Similarly, use the indices in the y array to set the corresponding columns to zero.
